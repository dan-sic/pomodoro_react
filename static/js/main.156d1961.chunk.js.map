{"version":3,"sources":["resources/beep.mp3","reducer.js","context.js","components/BreakLength.js","components/SessionLength.js","components/PlayPauseBtn.js","components/CircleTimer.js","components/Timer.js","components/RestartBtn.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","reducer","state","action","_objectSpread2","_objectSpread3","_state$appData","appData","timer","sessionLength","sessionTime","breakLength","type","decrementedTimerValue","decrementedLength","payload","Object","objectSpread","defineProperty","incrementedTimerValue","incrementedLength","activeInterval","timerInterval","clearInterval","setInterval","dispatch","newTime","newTimer","Context","React","createContext","Provider","_this","setState","react_default","a","createElement","value","this","props","children","Component","Consumer","BreakLength","_this$context$appData","context","_this$context$appData2","className","id","onClick","handleOnBreakDecrement","Math","floor","handleOnBreakIncrement","contextType","SessionLength","handleOnSessionDecrement","handleOnSessionIncrement","PlayPauseBtn","isRunning","Boolean","concat","CircleTimer","classCallCheck","_this$props","possibleConstructorReturn","getPrototypeOf","call","radius","stroke","normalizedRadius","circumference","PI","length","console","log","countCurrentPercent","_this$props2","strokeDashoffset","height","width","Fragment","fill","strokeWidth","r","cx","cy","strokeDasharray","style","Timer","playSound","minutes","seconds","_value$appData","CircleTimer_CircleTimer","convertSecondsToTime","RestartBtn","handleRestart","App","sound","current","play","createRef","context_Provider","BreakLength_BreakLength","SessionLength_SessionLength","Timer_Timer","PlayPauseBtn_PlayPauseBtn","RestartBtn_RestartBtn","src","soundfile","ref","ReactDOM","render","App_App","document","querySelector"],"mappings":"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","file":"static/js/main.156d1961.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/beep.f3e1419d.mp3\";","export default (state, action) => {\r\n  const { timer, sessionLength, sessionTime, breakLength } = state.appData;\r\n\r\n  switch (action.type) {\r\n    case \"TIMER_DECREMENT\":\r\n      let decrementedLength = state.appData[action.payload] - 60;\r\n      let decrementedTimerValue;\r\n\r\n      if (action.payload === \"sessionLength\" && sessionTime === true) {\r\n        // change the timer if Session length was changed while active Session time\r\n        decrementedTimerValue = timer - 60;\r\n      } else if (action.payload === \"breakLength\" && sessionTime === false) {\r\n        // otherwise change the timer if Break length was changed while there was break time\r\n        decrementedTimerValue = timer - 60;\r\n      } else {\r\n        // otherwise (if break length changed during session time or session length changed during break time) do not change the timer\r\n        decrementedTimerValue = timer;\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        appData: {\r\n          ...state.appData,\r\n          [action.payload]: decrementedLength,\r\n          timer: decrementedTimerValue\r\n        }\r\n      };\r\n    case \"TIMER_INCREMENT\":\r\n      let incrementedLength = state.appData[action.payload] + 60;\r\n      let incrementedTimerValue;\r\n\r\n      if (action.payload === \"sessionLength\" && sessionTime === true) {\r\n        // change the timer if Session length was changed while active Session time\r\n        incrementedTimerValue = timer + 60;\r\n      } else if (action.payload === \"breakLength\" && sessionTime === false) {\r\n        // otherwise change the timer if Break length was changed while there was break time\r\n        incrementedTimerValue = timer + 60;\r\n      } else {\r\n        // otherwise (if break length changed during session time or session length changed during break time) do not change the timer\r\n        incrementedTimerValue = timer;\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        appData: {\r\n          ...state.appData,\r\n          [action.payload]: incrementedLength,\r\n          timer: incrementedTimerValue\r\n        }\r\n      };\r\n    case \"TOGGLE_TIMER\":\r\n      const activeInterval = state.appData.timerInterval;\r\n\r\n      if (activeInterval) {\r\n        clearInterval(activeInterval);\r\n      }\r\n\r\n      const timerInterval = activeInterval\r\n        ? null\r\n        : setInterval(() => {\r\n            state.dispatch({ type: \"DECREMENT_TIMER\" });\r\n          }, 1000);\r\n\r\n      return {\r\n        ...state,\r\n        appData: {\r\n          ...state.appData,\r\n          timerInterval\r\n        }\r\n      };\r\n    case \"DECREMENT_TIMER\":\r\n      const newTime = timer - 1;\r\n\r\n      return {\r\n        ...state,\r\n        appData: {\r\n          ...state.appData,\r\n          timer: newTime\r\n        }\r\n      };\r\n    case \"CHANGE_TIMERS\":\r\n      const newTimer = sessionTime ? breakLength : sessionLength;\r\n\r\n      return {\r\n        ...state,\r\n        appData: {\r\n          ...state.appData,\r\n          timer: newTimer,\r\n          sessionTime: !sessionTime\r\n        }\r\n      };\r\n    case \"RESTART_APP\":\r\n      return {\r\n        ...state,\r\n        appData: {\r\n          ...state.appData,\r\n          breakLength: 300,\r\n          sessionLength: 1500,\r\n          timerInterval: null,\r\n          timer: 1500,\r\n          sessionTime: true\r\n        }\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport reducer from \"./reducer\";\r\n\r\nexport const Context = React.createContext();\r\n\r\nexport default class Provider extends React.Component {\r\n  state = {\r\n    appData: {\r\n      breakLength: 300,\r\n      sessionLength: 1500,\r\n      timerInterval: null,\r\n      timer: 1500,\r\n      sessionTime: true\r\n    },\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React from \"react\";\r\nimport { Consumer, Context } from \"../context\";\r\n\r\nexport default class BreakLength extends React.Component {\r\n  static contextType = Context;\r\n\r\n  handleOnBreakIncrement(dispatch) {\r\n    const { breakLength, timerInterval } = this.context.appData;\r\n\r\n    // prevent changing timer if it is active and setting it above 60\r\n    if (breakLength < 3600 && timerInterval === null) {\r\n      dispatch({ type: \"TIMER_INCREMENT\", payload: \"breakLength\" });\r\n    }\r\n  }\r\n\r\n  handleOnBreakDecrement(dispatch) {\r\n    const { breakLength, timerInterval } = this.context.appData;\r\n\r\n    // prevent changing timer if it is active and setting it below 1\r\n    if (breakLength > 60 && timerInterval === null) {\r\n      dispatch({ type: \"TIMER_DECREMENT\", payload: \"breakLength\" });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div>\r\n              <div className=\"controls__break\">\r\n                <label id=\"break-label\">Break Length</label>\r\n                <div className=\"controls__break-elements\">\r\n                  <i\r\n                    className=\"fas fa-chevron-down\"\r\n                    id=\"break-decrement\"\r\n                    onClick={() => this.handleOnBreakDecrement(dispatch)}\r\n                  />\r\n\r\n                  <span id=\"break-length\">\r\n                    {Math.floor(value.appData.breakLength / 60)}\r\n                  </span>\r\n\r\n                  <i\r\n                    className=\"fas fa-chevron-up\"\r\n                    id=\"break-increment\"\r\n                    onClick={() => this.handleOnBreakIncrement(dispatch)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Consumer, Context } from \"../context\";\r\n\r\nexport default class SessionLength extends React.Component {\r\n  static contextType = Context;\r\n\r\n  handleOnSessionIncrement(dispatch) {\r\n    const { sessionLength, timerInterval, timer } = this.context.appData;\r\n\r\n    // prevent changing timer if it is active and setting it above 60\r\n    if (sessionLength < 3600 && timer < 3600 && timerInterval === null) {\r\n      dispatch({ type: \"TIMER_INCREMENT\", payload: \"sessionLength\" });\r\n    }\r\n  }\r\n\r\n  handleOnSessionDecrement(dispatch) {\r\n    const { sessionLength, timerInterval, timer } = this.context.appData;\r\n\r\n    // prevent changing timer if it is active and setting it below 1\r\n    if (sessionLength > 60 && timer > 60 && timerInterval === null) {\r\n      dispatch({ type: \"TIMER_DECREMENT\", payload: \"sessionLength\" });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div>\r\n              <div className=\"controls__session\">\r\n                <label id=\"session-label\">Session Length</label>\r\n                <div className=\"controls__session-elements\">\r\n                  <i\r\n                    className=\"fas fa-chevron-down\"\r\n                    id=\"session-decrement\"\r\n                    onClick={() => this.handleOnSessionDecrement(dispatch)}\r\n                  />\r\n\r\n                  <span id=\"session-length\">\r\n                    {Math.floor(value.appData.sessionLength / 60)}\r\n                  </span>\r\n\r\n                  <i\r\n                    className=\"fas fa-chevron-up\"\r\n                    id=\"session-increment\"\r\n                    onClick={() => this.handleOnSessionIncrement(dispatch)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Consumer } from \"../context\";\r\n\r\nexport default class PlayPauseBtn extends React.Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          const isRunning = Boolean(value.appData.timerInterval);\r\n          return (\r\n            <div>\r\n              <button\r\n                className=\"main-control\"\r\n                id=\"start_stop\"\r\n                onClick={() => dispatch({ type: \"TOGGLE_TIMER\" })}\r\n              >\r\n                <i className={`fas fa-${isRunning ? \"pause\" : \"play\"}`} />\r\n              </button>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Context } from \"../context\";\r\n\r\nexport default class CircleTimer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { radius, stroke } = this.props;\r\n\r\n    this.normalizedRadius = radius - stroke * 2;\r\n    this.circumference = this.normalizedRadius * 2 * Math.PI;\r\n  }\r\n\r\n  static contextType = Context;\r\n\r\n  countCurrentPercent() {\r\n    const {\r\n      timer,\r\n      sessionLength,\r\n      breakLength,\r\n      sessionTime\r\n    } = this.context.appData;\r\n\r\n    const length = sessionTime ? sessionLength : breakLength;\r\n    return ((length - timer) / length) * 100;\r\n  }\r\n\r\n  render() {\r\n    console.log(this.countCurrentPercent());\r\n    const { radius, stroke } = this.props;\r\n\r\n    const strokeDashoffset =\r\n      this.circumference -\r\n      (this.countCurrentPercent() / 100) * this.circumference;\r\n\r\n    const { timer } = this.context.appData;\r\n\r\n    return (\r\n      <svg height={radius * 2} width={radius * 2} className=\"circleSVG\">\r\n        {timer === 0 ? null : (\r\n          <>\r\n            <circle\r\n              stroke=\"rgba(255, 255, 255, 0.192)\"\r\n              fill=\"transparent\"\r\n              strokeWidth=\"1\"\r\n              r={this.normalizedRadius}\r\n              cx={radius}\r\n              cy={radius}\r\n            />\r\n            <circle\r\n              stroke=\"white\"\r\n              fill=\"transparent\"\r\n              strokeWidth={stroke}\r\n              strokeDasharray={this.circumference + \" \" + this.circumference}\r\n              style={{ strokeDashoffset }}\r\n              r={this.normalizedRadius}\r\n              cx={radius}\r\n              cy={radius}\r\n            />\r\n          </>\r\n        )}\r\n      </svg>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Consumer, Context } from \"../context\";\r\n\r\nimport CircleTimer from \"./CircleTimer\";\r\n\r\nexport default class Timer extends Component {\r\n  static contextType = Context;\r\n\r\n  componentDidUpdate() {\r\n    if (this.context.appData.timer === -1) {\r\n      this.props.playSound();\r\n      this.context.dispatch({ type: \"CHANGE_TIMERS\" });\r\n    }\r\n  }\r\n\r\n  convertSecondsToTime(timer) {\r\n    const minutes = Math.floor(timer / 60);\r\n    const seconds = timer - minutes * 60;\r\n\r\n    if (minutes < 10 && seconds < 10) {\r\n      return `0${minutes}:0${seconds}`;\r\n    } else if (minutes < 10) {\r\n      return `0${minutes}:${seconds}`;\r\n    } else if (seconds < 10) {\r\n      return `${minutes}:0${seconds}`;\r\n    } else {\r\n      return `${minutes}:${seconds}`;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { timer, sessionTime } = value.appData;\r\n          return (\r\n            <div>\r\n              <div className=\"timer\">\r\n                <CircleTimer radius=\"140\" stroke=\"6\" />\r\n                <div className=\"timer-body\">\r\n                  <label id=\"timer-label\">\r\n                    {sessionTime ? \"Session\" : \"Break\"}\r\n                  </label>\r\n                  <span id=\"time-left\">{this.convertSecondsToTime(timer)}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Consumer, Context } from \"../context\";\r\n\r\nexport default class RestartBtn extends React.Component {\r\n  static contextType = Context;\r\n\r\n  handleRestart(dispatch) {\r\n    // check if timer is not running\r\n    if (this.context.appData.timerInterval === null) {\r\n      dispatch({ type: \"RESTART_APP\" });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <button\r\n              className=\"main-control\"\r\n              id=\"reset\"\r\n              onClick={() => this.handleRestart(dispatch)}\r\n            >\r\n              <i className=\"fas fa-redo\" />\r\n            </button>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Provider from \"./context\";\r\n\r\nimport BreakLength from \"./components/BreakLength\";\r\nimport SessionLength from \"./components/SessionLength\";\r\nimport PlayPauseBtn from \"./components/PlayPauseBtn\";\r\nimport Timer from \"./components/Timer\";\r\nimport RestartBtn from \"./components/RestartBtn\";\r\nimport soundfile from \"./resources/beep.mp3\";\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.sound = React.createRef();\r\n  }\r\n\r\n  playSound = () => {\r\n    this.sound.current.play();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Provider>\r\n        <div>\r\n          <h1>Pomodoro Clock</h1>\r\n          <div className=\"container\">\r\n            <div className=\"controls\">\r\n              <BreakLength />\r\n              <SessionLength />\r\n            </div>\r\n            <Timer playSound={this.playSound} />\r\n            <div className=\"main-controls\">\r\n              <PlayPauseBtn />\r\n              <RestartBtn />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <audio src={soundfile} id=\"beep\" ref={this.sound} />\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}